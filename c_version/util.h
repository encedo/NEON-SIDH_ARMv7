/*
	NEON-SIDH: Efficient Implementation of Supersingular Isogeny Diffie-Hellman
		Key Exchange Protocol on ARM
		
	Authors: Brian Koziel, Amir Jalali, Reza Azarderakhsh, David Jao, and
		Mehran Mozaffari-Kermani
		
	Link to published paper: To be posted 
		
	Previous versions by Luca de Feo and Dieter Fishbein
	
	util.h: Utility functions used in the SIDH tests
	
	Copyright (c) Brian Koziel 2016

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef UTIL_H
  #define UTIL_H
  
#include <gmp.h>
#include <stdio.h>
#include <openssl/rand.h>
#include "fp.h"
#include "fp2.h"
#include "mont_curve.h"

//returns a random integer from 0 to m (inclusive)
void rand_range(mpz_t *num, mpz_t m);

void rand_subgroup(mpz_t *m, mpz_t *n, char * l, char * e);

//reads public parameters for use with ss_isogeny_exchange_dfc in from file. Note that this file must match the format and naming conventions
//of the one generated by ss_isogeny_gen_file().
void params_from_file(char * p, char *eA, char *eB, char *lA, char *lB, char* fMult, int *strA, int *lenA, int *strB, int *lenB, MP *PA, MP *QA, MP *PB, MP *QB, char * file );

//Get Median of list of times for program.
double getMedian(double * array,int size);

#endif